programs = {
	'a1570a43' = 'Center the red shape inside the box bounded by the green cells.',
	'd364b489' = 'For each blue cell in the image, draw a red cell immediately above it, an orange cell to the left, a pink cell to the right, and a light blue cell below. If original blue cell was on a border, skip drawing the adjacent cells.',
	'd23f8c26' = 'For every cell that is not on the center vertical column, color all those cells black.',
	'42a50994' = 'For every colored cell that is not touching other cells, color that cell black.',
	'9f236235' = 'Remove the red rows and columns. Flip the resulting image horizontally, and scale that image down so that each large cell is a single cell.',
	'780d0b14' = 'Observe that the input grid image is several regions separated by horizontal and vertical black lines. Each cell in the output corresponds to a region, and has the color of that region in the input.',
	'a3325580' = 'Find the shape with the most cells. From left to right, find each shape with that many cells and create a vertical stripe in the output image of that many cells.',
	'1f642eb9' = 'For each colored cell, project that color onto the closest cell in the central light blue shape.',
	'ff28f65a' = 'Count the number of shapes in the input. Create a 3x3 output image and fill in a checkerboard pattern in the output with that many blue pixels from left-to-right, top-to-bottom.',
	'22eb0ac0' = 'If two cells on opposite sides of the input are the same color, connect those cells with a horizontal line of the same color.',
	'ddf7fa4f' = 'Color each grey rectangle the same as the colored cell that is directly above it.',
	'9af7a82c' = 'create vertical columns separated by color going left to right from colors with the most squares to those with the least',
	'ac0a08a4' = 'double the number of squares on the sides of the grid (total number of squares = a^2 --> 2a^2), and, color in the new grid so that if the new grid were to be overlapped with the original and they were the same area, the colors would take up the same space in the same location',
	'5614dbcf' = 'convert an x^2 grid into an (x/3)^2 grid. If any gray squares are not touched on 3 or more sides by a color, make them black, if any gray squares exist which are surrounded on 3 or more sides by a color, make them that color which surrounds them. Reduce all groups of colored squares which for x^2 larger squares to (x/3)^3 squares',
	'00d62c1b' = 'replace all black squares which are surrounded on all sides by green squares with a yellow square',
	'ac0a08a4' = 'multiply the side length of the total grid by the number of colored squares in the original grid. Color in the new grid so that if the new grid and old grid were to be overlapped with the original and they had the same total are, the colors would take up the same space and same location',
	'3f7978a0' = 'reduce the grid to only the area enclosed on both sides by grey vertical lines with blue squares on either end',
	'2bee17df' = 'create vertical and horizontal green lines with on either side contact a blue and red square, respectively',
	'67a3c6ac' = 'reflect the image horizontally',
	'ce22a75a' = 'where before there was a grey square, place a 3*3 square of blue with the center where the grey was',
	'a64e4611' = 'for each black square along the border not touching a colored square, project a ray of green squares along all black squares on the same line going in while maintaining a border of 1 black square',
	'9565186b' = 'find the mode color and color all other squares gray',
	'b60334d2' = 'for each gray square, make it the center of a 3*3 blue square with gray corners and a black center',
	'6773b310' = 'for each "tile" separated by the light blue lines, color in a corresponding output square dark blue if there are 2 pink squares in the tile and black if there is only 1 pink square',
	'4be741c5' = 'for each distinct vertical/horizontal region of colored squares, append a horizontally/vertically adjacent square of same color',
	'447fd412' = 'for each n*n red square not touching any blue squares, repeat the pattern of the red squares touching blue squares upscaled by a factor of n',
	'810b9b61' = 'for each blue shape, color it green if it is closed',
	'6e82a1ae' = 'for each shape (set of adjacent gray squares), color it green if it is comprised of 2 squares, red if 3 squares, and blue if 4 squares',
	'5c2c9af4' = 'for each diagonal of colored squares, create a repeating frame of the same color around the center square with a border margin equivalent to the diagnol distance from the center square to either of the two other squares.',
	'8be77c9e' = 'vertically append its vertical reflection',
	'e48d4e1a' = 'find the "center square" which is indicated by the crosshair of colored squares. Then, on a blank grid of same dimensions, fill in a square of same color in the original position but down n squares and left n squares, with n being the number of gray squares in the test grid. Finally, project same color to all squares in same column or row',
	'b2862040' = 'color all closed blue shapes teal, with closed meaning each and every blue square in a shape is adjacent to another blue square',
	'e179c5f4' = 'start with the blue square in the lower left, and color the square diagonally up and right, switching horizontal directions each time the first or last column is reached. Repeat this until in the first row, and then color all leftover black squares teal',
	'b8cdaf2b' = 'find the color in the center column of the bottom row. Then, find the color squares in the second to last row. Lastly, diagnolally project the first color you found from the end squares of the shape in the second to last row',
	


}
